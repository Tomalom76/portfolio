{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Witaj na stronie portfolio","text":"<p>O mnie</p> <p>Witam na stronie po\u015bwi\u0119conej projektom z dziedziny analizy danych i programowania, uczenia maszynowego i sztucznej inteligencji. Znajdziecie tutaj wiele projekt\u00f3w, nad kt\u00f3rymi pracowa\u0142em w ostatnim czasie.</p> <p>Zapraszam do zapoznania si\u0119 z nimi i mam nadziej\u0119, \u017ce znajdziecie co\u015b ciekawego dla siebie.</p>"},{"location":"Titanic/","title":"Analiza Danych EDA Titanica: Eksploracja Domenowa","text":"<p>Analiza danych os\u00f3b, kt\u00f3re prze\u017cy\u0142y b\u0105d\u017a nie prze\u017cy\u0142y katastrofy statku Titanic dnia 12.04.1912 roku.   Jest to czysta analiza danych wywnioskowana z tabeli ofiar tragedii. Na r\u00f3\u017cnych wykres i tablicach mo\u017cna   oceni\u0107 r\u00f3\u017cne aspekty przetrwania, np. kto i z jakiej klasy pasa\u017cerskiej mia\u0142 wi\u0119ksz\u0105 szans\u0119 prze\u017cy\u0107 tragedi\u0119.   Zach\u0119cam do zapoznania si\u0119 z tre\u015bci\u0105 notebooka, kt\u00f3ry mo\u017cna sobie pobra\u0107 poni\u017cej.</p> <p>Pobierz Notebook Pobierz Plik Bazy Danych</p> <p> Titanic <p></p> In\u00a0[1]: <pre>import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n</pre> In\u00a0[2]: <pre>df = pd.read_csv('26__titanic.csv', sep=',')\n\ndf.sample(10)\n</pre> Out[2]: pclass survived name sex age sibsp parch ticket fare cabin embarked boat body home.dest 480 2.0 0.0 Laroche, Mr. Joseph Philippe Lemercier male 25.0 1.0 2.0 SC/Paris 2123 41.5792 NaN C NaN NaN Paris / Haiti 943 3.0 0.0 Laitinen, Miss. Kristina Sofia female 37.0 0.0 0.0 4135 9.5875 NaN S NaN NaN NaN 543 2.0 0.0 Reeves, Mr. David male 36.0 0.0 0.0 C.A. 17248 10.5000 NaN S NaN NaN Brighton, Sussex 189 1.0 0.0 Long, Mr. Milton Clyde male 29.0 0.0 0.0 113501 30.0000 D6 S NaN 126.0 Springfield, MA 44 1.0 1.0 Burns, Miss. Elizabeth Margaret female 41.0 0.0 0.0 16966 134.5000 E40 C 3 NaN NaN 610 3.0 0.0 Ahlin, Mrs. Johan (Johanna Persdotter Larsson) female 40.0 1.0 0.0 7546 9.4750 NaN S NaN NaN Sweden Akeley, MN 526 2.0 1.0 Pallas y Castello, Mr. Emilio male 29.0 0.0 0.0 SC/PARIS 2147 13.8583 NaN C 9 NaN Spain / Havana, Cuba 698 3.0 0.0 Cacic, Mr. Jego Grga male 18.0 0.0 0.0 315091 8.6625 NaN S NaN NaN NaN 1161 3.0 0.0 Rush, Mr. Alfred George John male 16.0 0.0 0.0 A/4. 20589 8.0500 NaN S NaN NaN NaN 1259 3.0 0.0 Turcin, Mr. Stjepan male 36.0 0.0 0.0 349247 7.8958 NaN S NaN NaN NaN In\u00a0[3]: <pre>df.info()\n</pre> <pre>&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 1310 entries, 0 to 1309\nData columns (total 14 columns):\n #   Column     Non-Null Count  Dtype  \n---  ------     --------------  -----  \n 0   pclass     1309 non-null   float64\n 1   survived   1309 non-null   float64\n 2   name       1309 non-null   object \n 3   sex        1309 non-null   object \n 4   age        1046 non-null   float64\n 5   sibsp      1309 non-null   float64\n 6   parch      1309 non-null   float64\n 7   ticket     1309 non-null   object \n 8   fare       1308 non-null   float64\n 9   cabin      295 non-null    object \n 10  embarked   1307 non-null   object \n 11  boat       486 non-null    object \n 12  body       121 non-null    float64\n 13  home.dest  745 non-null    object \ndtypes: float64(7), object(7)\nmemory usage: 143.4+ KB\n</pre> <p>W wielu rekordach brakuje danych, np. w informacji o przypisaniu do kabiny lub czy cia\u0142o zosta\u0142o odnalezione.</p> In\u00a0[4]: <pre>df[df.duplicated()]\n</pre> Out[4]: pclass survived name sex age sibsp parch ticket fare cabin embarked boat body home.dest <p>Duplikat\u00f3w brak</p> In\u00a0[5]: <pre>df.nunique()\n</pre> Out[5]: <pre>pclass          3\nsurvived        2\nname         1307\nsex             2\nage            98\nsibsp           7\nparch           8\nticket        929\nfare          281\ncabin         186\nembarked        3\nboat           27\nbody          121\nhome.dest     369\ndtype: int64</pre> <p>Tu mo\u017cna zauwa\u017cy\u0107, kt\u00f3re pola s\u0105 polami typu bool, mo\u017cna to por\u00f3wna\u0107 z informacj\u0105 o bazie danych i potwierdzi\u0107. Np. kolumna 'survived' przyjmuje tylko</p> <p>dwie warto\u015bci unikatowe - survived(1) lub not survived(0). Czyli mimo i\u017c jest to pole typu Float, w rzeczywisto\u015bci jest polem logicznym True or False.</p> <p>Mimo wszystko pozostawi\u0119 to pole takim jakie ono jest i w toku dalszych przelicze\u0144 sprawdz\u0119 czy do wykres\u00f3w lepiej si\u0119 nadaje jako pole logiczne czy Float.</p> In\u00a0[6]: <pre>df_clean = df.dropna(subset=['survived', 'sex'])\nsurvived_sex_counts = df_clean.groupby(['sex', 'survived']).size().unstack()\nsurvived_sex_counts.plot(kind='bar', stacked=True)\nplt.title('Prze\u017cywalno\u015b\u0107 wed\u0142ug p\u0142ci')\nplt.xlabel('P\u0142e\u0107')\nplt.ylabel('Liczba')\nplt.xticks(rotation=0)\nplt.legend(title='Prze\u017cyli', labels=['Nie', 'Tak'])\n</pre> Out[6]: <pre>&lt;matplotlib.legend.Legend at 0x2000ef33e10&gt;</pre> <p>Na wykresie wyra\u017anie wida\u0107, \u017ce stosunkowo wi\u0119cej kobiet ni\u017c m\u0119\u017cczyzn uratowa\u0142o si\u0119</p> <p>Czyli mo\u017cna wyci\u0105gn\u0105\u0107 wniosek, \u017ce brano pod uwag\u0119 to czy osoba ratowana by\u0142a kobiet\u0105 a tak\u017ce, \u017ce w takim wypadku nale\u017ca\u0142 jej si\u0119 priorytet miejsca w szalupie.</p> In\u00a0[7]: <pre>pwp = df['sex'].value_counts()\nresult = {\n    \"type\": \"dataframe\",\n    \"value\": pwp.to_frame(name='count')\n}\npwp\n</pre> Out[7]: <pre>sex\nmale      843\nfemale    466\nName: count, dtype: int64</pre> <p>Tutaj wyra\u017anie wida\u0107, \u017ce m\u0119\u017cczyzn na pok\u0142adzie by\u0142o wi\u0119cej niemal dwukrotnie od kobiet, co wzmacnia poziom relacji z wykresu powy\u017cej, poniewa\u017c m\u0119\u017cczyzn zgin\u0119\u0142o wi\u0119cej.</p> <p>m\u0119\u017cczyzna mia\u0142 o wiele mniejsze szanse przetrwania ni\u017c kobieta</p> In\u00a0[8]: <pre>plt.figure(figsize=(10, 6))\nplt.scatter(df['age'], df.index, alpha=0.5)\nplt.title('Uczestnicy rejsu w podziale na wiek')\nplt.xlabel('Wiek')\nplt.ylabel('Index')\nplt.grid(True)\n</pre> <p>Wykres punktowy przedstawia zakres wiekowy podr\u00f3\u017cnych Wniosek jaki si\u0119 nasuwa to to, \u017ce wi\u0119kszo\u015bc pasa\u017cer\u00f3w by\u0142a w wieku 20-30 lat</p> In\u00a0[9]: <pre>df = df.dropna(subset=['age'])\n#Oddzielenie doros\u0142ych od dzieci\nchildren = df[df['age'] &lt; 18]\nadults = df[df['age'] &gt;= 18]\n\n# Zliczenie doros\u0142ych i dzieci\nnum_children = len(children)\nnum_adults = len(adults)\n\n# Stworzenie wykresu\nplt.figure(figsize=(10, 6))\nplt.scatter(children['age'], children.index, color='blue', label=f'Dzieci (&lt;18): {num_children}')\nplt.scatter(adults['age'], adults.index, color='red', label=f'Doro\u015bli (&gt;=18): {num_adults}')\n\n# Dodanie nazw osi i legendy\nplt.xlabel('Wiek')\nplt.ylabel('Passenger Index')\nplt.title('Wykres punktowy uczestnik\u00f3w wed\u0142ug podzia\u0142u na p\u0142e\u0107')\nplt.legend()\n\n# Reverse axes\nplt.gca().invert_yaxis()\n</pre> <p>W kolumnie age w samej bazie danych mamy tylko 1046 element\u00f3w i ten wykres jest zrobiony tylko dla tej grupy, ale wyra\u017anie wida\u0107, na podstawie tak du\u017cej grupy pr\u00f3bnej jak kszta\u0142towa\u0142 si\u0119 podzia\u0142 wiekowy i jaki mniej wi\u0119cej odsetek stanowi\u0142y dzieci.</p> <p>Procentowo wygl\u0105da\u0142o to tak:</p> In\u00a0[10]: <pre># Przeliczenie doros\u0142ych i dzieci\nchildren_count = df[df['age'] &lt; 18].shape[0]\nadults_count = df[df['age'] &gt;= 18].shape[0]\n\n# Stworzenie wykresu ko\u0142owego\nlabels = ['Dzieci (&lt;18)', 'Doro\u015bli (18+)']\nsizes = [children_count, adults_count]\ncolors = ['#66b3ff','#ff9999']\nexplode = (0.1, 0)  # wykrojenie kawa\u0142ka\n\nplt.figure(figsize=(8, 8))\nplt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%', shadow=True, startangle=140)\nplt.axis('equal')  \n</pre> Out[10]: <pre>(np.float64(-1.202097982230382),\n np.float64(1.1048616765885606),\n np.float64(-1.0999999847206687),\n np.float64(1.0999998206482027))</pre> In\u00a0[11]: <pre>titanic_df = df\nprz_df = titanic_df[titanic_df['survived'] == 1]\nnajm = prz_df.nsmallest(10, 'age')\nresult = {\n    \"type\": \"dataframe\",\n    \"value\": najm\n}\nnajm\n</pre> Out[11]: pclass survived name sex age sibsp parch ticket fare cabin embarked boat body home.dest 763 3.0 1.0 Dean, Miss. Elizabeth Gladys \"Millvina\" female 0.1667 1.0 2.0 C.A. 2315 20.5750 NaN S 10 NaN Devon, England Wichita, KS 1240 3.0 1.0 Thomas, Master. Assad Alexander male 0.4167 0.0 1.0 2625 8.5167 NaN C 16 NaN NaN 427 2.0 1.0 Hamalainen, Master. Viljo male 0.6667 1.0 1.0 250649 14.5000 NaN S 4 NaN Detroit, MI 657 3.0 1.0 Baclini, Miss. Eugenie female 0.7500 2.0 1.0 2666 19.2583 NaN C C NaN Syria New York, NY 658 3.0 1.0 Baclini, Miss. Helene Barbara female 0.7500 2.0 1.0 2666 19.2583 NaN C C NaN Syria New York, NY 359 2.0 1.0 Caldwell, Master. Alden Gates male 0.8333 0.0 2.0 248738 29.0000 NaN S 13 NaN Bangkok, Thailand / Roseville, IL 548 2.0 1.0 Richards, Master. George Sibley male 0.8333 1.0 1.0 29106 18.7500 NaN S 4 NaN Cornwall / Akron, OH 611 3.0 1.0 Aks, Master. Philip Frank male 0.8333 0.0 1.0 392091 9.3500 NaN S 11 NaN London, England Norfolk, VA 1 1.0 1.0 Allison, Master. Hudson Trevor male 0.9167 1.0 2.0 113781 151.5500 C22 C26 S 11 NaN Montreal, PQ / Chesterville, ON 590 2.0 1.0 West, Miss. Barbara J female 0.9167 1.0 2.0 C.A. 34651 27.7500 NaN S 10 NaN Bournmouth, England <p>Tych ludzi jeszcze ca\u0142kiem niedawno mo\u017cna by\u0142o spotka\u0107 na ulicy :)</p> In\u00a0[12]: <pre>df = df.dropna(subset=['pclass', 'sex'])\n\n# Grupowanie po klasie i p\u0142ci a potem zliczenie\nclass_sex_counts = df.groupby(['pclass', 'sex']).size().unstack()\n\n# Przeliczenie ca\u0142kowitej ilo\u015bci pasa\u017cer\u00f3w w ka\u017cdej z klas\nclass_totals = df['pclass'].value_counts().sort_index()\n\n# Stworzenie nazw labeli w warto\u015bci sumarycznej klas\nlabels = [f'Class {int(cls)} ({total})' for cls, total in class_totals.items()]\n\n# Narysowanie wykresu z podzia\u0142em na p\u0142e\u0107\nfig, axes = plt.subplots(1, 2, figsize=(12, 6))\nclass_sex_counts.plot(kind='pie', y='male', labels=labels, autopct='%1.1f%%', ax=axes[0], legend=False)\nclass_sex_counts.plot(kind='pie', y='female', labels=labels, autopct='%1.1f%%', ax=axes[1], legend=False)\n\n# Ustawienie tytu\u0142\u00f3w\naxes[0].set_title('M\u0119\u017cczy\u017ani')\naxes[1].set_title('Kobiety')\nfor ax in axes:\n    ax.set_ylabel('')\n\nplt.suptitle('Procentowy udzia\u0142 pasa\u017cer\u00f3w z podzia\u0142em na klas\u0119 podr\u00f3\u017cy i p\u0142e\u0107')\nplt.tight_layout()\n</pre> <p>Wniosek jaki si\u0119 nasuwa to to, \u017ce procentowo i liczebnie najwi\u0119cej kobiet oraz m\u0119\u017cczyzn podr\u00f3\u017cowa\u0142o w klasie 3</p> In\u00a0[13]: <pre># Odfiltrowanie klasy 1\nclass_1_df = df[df['pclass'] == 1.0]\n\n# Podzia\u0142 na wiek\nclass_1_df['age_group'] = class_1_df['age'].apply(lambda x: 'child' if x &lt; 18 else 'adult')\n\n# Przeliczenie \u015bmiertelno\u015bci i prze\u017cycia po grupie wiekowej\nsurvived_counts = class_1_df[class_1_df['survived'] == 1].shape[0]\nnot_survived_children = class_1_df[(class_1_df['survived'] == 0) &amp; (class_1_df['age_group'] == 'child')].shape[0]\nnot_survived_adults = class_1_df[(class_1_df['survived'] == 0) &amp; (class_1_df['age_group'] == 'adult')].shape[0]\n\n# Przygotowanie danych pod wykres ko\u0142owy\ntotal_passengers = class_1_df.shape[0]\nnot_survived_total = not_survived_children + not_survived_adults\nsurvived_total = total_passengers - not_survived_total\n\n# Zrobienie wykresu\nlabels = ['Prze\u017cyli', 'Nie prze\u017cyli - dzieci', 'Nie prze\u017cyli - Doro\u015bli']\nsizes = [survived_total, not_survived_children, not_survived_adults]\ncolors = ['#66b3ff', '#ff9999', '#99ff99']\n\nfig, ax = plt.subplots()\nax.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)\nax.axis('equal')  \n</pre> <pre>C:\\Users\\tmirk\\AppData\\Local\\Temp\\ipykernel_19720\\236861734.py:5: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  class_1_df['age_group'] = class_1_df['age'].apply(lambda x: 'child' if x &lt; 18 else 'adult')\n</pre> Out[13]: <pre>(np.float64(-1.099999739845874),\n np.float64(1.099999095319948),\n np.float64(-1.0999989640946295),\n np.float64(1.0999999506711728))</pre> In\u00a0[14]: <pre># Odfiltrowanie klasy 2\nclass_2_df = df[df['pclass'] == 2.0]\n\n# Podzia\u0142 na wiek\nclass_2_df['age_group'] = class_2_df['age'].apply(lambda x: 'child' if x &lt; 18 else 'adult')\n\n# Przeliczenie \u015bmiertelno\u015bci i prze\u017cycia po grupie wiekowej\nsurvived_counts = class_2_df[class_2_df['survived'] == 1].shape[0]\nnot_survived_children = class_2_df[(class_2_df['survived'] == 0) &amp; (class_2_df['age_group'] == 'child')].shape[0]\nnot_survived_adults = class_2_df[(class_2_df['survived'] == 0) &amp; (class_2_df['age_group'] == 'adult')].shape[0]\n\n# Przygotowanie danych pod wykres ko\u0142owy\ntotal_passengers = class_2_df.shape[0]\nnot_survived_total = not_survived_children + not_survived_adults\nsurvived_total = total_passengers - not_survived_total\n\n# Zrobienie wykresu\nlabels = ['Prze\u017cyli', 'Nie prze\u017cyli - dzieci', 'Nie prze\u017cyli - Doro\u015bli']\nsizes = [survived_total, not_survived_children, not_survived_adults]\ncolors = ['#66b3ff', '#ff9999', '#99ff99']\n\nfig, ax = plt.subplots()\nax.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)\nax.axis('equal') \n</pre> <pre>C:\\Users\\tmirk\\AppData\\Local\\Temp\\ipykernel_19720\\2736117718.py:5: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  class_2_df['age_group'] = class_2_df['age'].apply(lambda x: 'child' if x &lt; 18 else 'adult')\n</pre> Out[14]: <pre>(np.float64(-1.0999930334354537),\n np.float64(1.0999991011840888),\n np.float64(-1.0999994078064712),\n np.float64(1.0999999718003082))</pre> In\u00a0[15]: <pre># Odfiltrowanie klasy 3\nclass_3_df = df[df['pclass'] == 3.0]\n\n# Podzia\u0142 na wiek\nclass_3_df['age_group'] = class_3_df['age'].apply(lambda x: 'child' if x &lt; 18 else 'adult')\n\n# Przeliczenie \u015bmiertelno\u015bci i prze\u017cycia po grupie wiekowej\nsurvived_counts = class_3_df[class_3_df['survived'] == 1].shape[0]\nnot_survived_children = class_3_df[(class_3_df['survived'] == 0) &amp; (class_3_df['age_group'] == 'child')].shape[0]\nnot_survived_adults = class_3_df[(class_3_df['survived'] == 0) &amp; (class_3_df['age_group'] == 'adult')].shape[0]\n\n# Przygotowanie danych pod wykres ko\u0142owy\ntotal_passengers = class_3_df.shape[0]\nnot_survived_total = not_survived_children + not_survived_adults\nsurvived_total = total_passengers - not_survived_total\n\n# Zrobienie wykresu\nlabels = ['Prze\u017cyli', 'Nie prze\u017cyli - dzieci', 'Nie prze\u017cyli - Doro\u015bli']\nsizes = [survived_total, not_survived_children, not_survived_adults]\ncolors = ['#66b3ff', '#ff9999', '#99ff99']\n\nfig, ax = plt.subplots()\nax.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)\nax.axis('equal') \n</pre> <pre>C:\\Users\\tmirk\\AppData\\Local\\Temp\\ipykernel_19720\\2790980588.py:5: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  class_3_df['age_group'] = class_3_df['age'].apply(lambda x: 'child' if x &lt; 18 else 'adult')\n</pre> Out[15]: <pre>(np.float64(-1.0999998381915566),\n np.float64(1.0999991064053791),\n np.float64(-1.0999987116082428),\n np.float64(1.0999999386480115))</pre> <p>Niestety najwi\u0119ksza \u015bmiertelno\u015bc by\u0142a w klasie 3 potem w klasie 2 a najmniejsza w klasie 1. R\u00f3wnolegle, dzieci mia\u0142y najwi\u0119ksz\u0105 szanse prze\u017cycia w klasie 1.</p> <p>To potwierdza, \u017ce klasa 1 by\u0142a klas\u0105 najbardziej uprzywilejowan\u0105, jednak macierz korelacji ceny biletu do prze\u017cywalno\u015bci tego nie potwierdza:</p> In\u00a0[16]: <pre># Przeliczenie macierzy\ncorrelation_matrix = df[['pclass', 'fare', 'survived']].corr()\n\n# Wyrysowanie macierzy\nplt.figure(figsize=(8, 6))\nsns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=\".2f\")\nplt.title('Correlation Matrix of Fare by Class to Survival')\n</pre> Out[16]: <pre>Text(0.5, 1.0, 'Correlation Matrix of Fare by Class to Survival')</pre> <p>Por\u00f3wnanie ceny biletu do prze\u017cycia nie wykazuje korelacji, ale ceny biletu do klasy podr\u00f3\u017cy ju\u017c pokazuj\u0105 lekk\u0105 korelacj\u0119.</p> <p>Gdy rozbije si\u0119 t\u0119 macierz na poszczeg\u00f3lne klasy wtedy lepiej wida\u0107 zale\u017cno\u015b\u0107 ceny od \u015bmiertelno\u015bci jednak wykresy ko\u0142owe pokazuj\u0105 wi\u0119cej.</p> In\u00a0[17]: <pre># Filter out rows with missing values in 'fare', 'pclass', or 'survived'\ndf_filtered = df.dropna(subset=['fare', 'pclass', 'survived'])\n\n# Create a correlation matrix for each class\ncorrelation_matrices = {}\nfor pclass in df_filtered['pclass'].unique():\n    class_data = df_filtered[df_filtered['pclass'] == pclass]\n    correlation_matrix = class_data[['fare', 'survived']].corr()\n    correlation_matrices[pclass] = correlation_matrix\n\n# Plot the correlation matrices\nfig, axes = plt.subplots(1, len(correlation_matrices), figsize=(15, 5))\nfig.suptitle('Korelacja ceny biletu do prze\u017cywalno\u015bci wed\u0142ug klas')\n\nfor ax, (pclass, corr_matrix) in zip(axes, correlation_matrices.items()):\n    sns.heatmap(corr_matrix, annot=True, cmap='coolwarm', ax=ax)\n    ax.set_title(f'Class {int(pclass)}')\n</pre> <ul> <li>w klasie 1:</li> </ul> <pre><code>\u015bmiertelno\u015b\u0107 doros\u0142ych wynios\u0142a: 35.6%\n\u015bmiertelno\u015b\u0107 dzieci wynios\u0142a:    0.7%</code></pre> <ul> <li>w klasie 2:</li> </ul> <pre><code>\u015bmiertelno\u015b\u0107 doros\u0142ych wynios\u0142a: 54.4%\n\u015bmiertelno\u015b\u0107 dzieci wynios\u0142a:    1.5%</code></pre> <ul> <li>w klasie 3:</li> </ul> <pre><code>\u015bmiertelno\u015b\u0107 doros\u0142ych wynios\u0142a: 60.5%\n\u015bmiertelno\u015b\u0107 dzieci wynios\u0142a:    13.4%</code></pre> In\u00a0[\u00a0]: <pre> \n</pre> <p></p>"},{"location":"Titanic/#Analiza-TITANIC","title":"Analiza TITANIC\u00b6","text":""},{"location":"Titanic/#Import-bibliotek","title":"Import bibliotek\u00b6","text":""},{"location":"Titanic/#Import-pliku-z-baz%C4%85-danych-i-pokazanie-10-losowych-wierszy","title":"Import pliku z baz\u0105 danych i pokazanie 10 losowych wierszy\u00b6","text":""},{"location":"Titanic/#Pro%C5%9Bba-o-podanie-parametr%C3%B3w-bazy-(informacji-o-polach)","title":"Pro\u015bba o podanie parametr\u00f3w bazy (informacji o polach)\u00b6","text":""},{"location":"Titanic/#Pro%C5%9Bba-o-wy%C5%9Bwietlenie-duplikat%C3%B3w","title":"Pro\u015bba o wy\u015bwietlenie duplikat\u00f3w\u00b6","text":""},{"location":"Titanic/#Pro%C5%9Bba-o-wy%C5%9Bwietlenie-unikatowych-warto%C5%9Bci","title":"Pro\u015bba o wy\u015bwietlenie unikatowych warto\u015bci\u00b6","text":""},{"location":"Titanic/#Pro%C5%9Bba-o-wy%C5%9Bwietlenie-wykresu-s%C5%82upkowego-wed%C5%82ug-tego-kto-prze%C5%BCy%C5%82-z-podzia%C5%82em-na-p%C5%82e%C4%87","title":"Pro\u015bba o wy\u015bwietlenie wykresu s\u0142upkowego wed\u0142ug tego kto prze\u017cy\u0142 z podzia\u0142em na p\u0142e\u0107\u00b6","text":""},{"location":"Titanic/#Pro%C5%9Bba-o-pokazanie-liczby-pasa%C5%BCer%C3%B3w-wg.-podzia%C5%82u-na-p%C5%82e%C4%87","title":"Pro\u015bba o pokazanie liczby pasa\u017cer\u00f3w wg. podzia\u0142u na p\u0142e\u0107\u00b6","text":""},{"location":"Titanic/#Wniosek:","title":"Wniosek:\u00b6","text":""},{"location":"Titanic/#Pro%C5%9Bba-o-pokazanie-wykresu-punktowego-uczestnik%C3%B3w-rejsu-wed%C5%82ug-podzia%C5%82u-na-wiek","title":"Pro\u015bba o pokazanie wykresu punktowego uczestnik\u00f3w rejsu wed\u0142ug podzia\u0142u na wiek\u00b6","text":""},{"location":"Titanic/#A-teraz-poka%C5%BC%C4%99-ten-sam-wykres-z-oznaczeniem-innym-kolorem-wszystkich-pasa%C5%BCer%C3%B3w-poni%C5%BCej-18-roku-%C5%BCycia.","title":"A teraz poka\u017c\u0119 ten sam wykres z oznaczeniem innym kolorem wszystkich pasa\u017cer\u00f3w poni\u017cej 18 roku \u017cycia.\u00b6","text":""},{"location":"Titanic/#A-jak-nazywa%C5%82y-si%C4%99-najm%C5%82odsze-osoby-kt%C3%B3re-prze%C5%BCy%C5%82y-katastrof%C4%99?","title":"A jak nazywa\u0142y si\u0119 najm\u0142odsze osoby kt\u00f3re prze\u017cy\u0142y katastrof\u0119?\u00b6","text":""},{"location":"Titanic/#Pokazanie-wykresu-ko%C5%82owego-procentowego-udzia%C5%82u-pasa%C5%BCer%C3%B3w-w-poszczeg%C3%B3lnych-klasach-z-uwzgl%C4%99dnieniem-p%C5%82ci.","title":"Pokazanie wykresu ko\u0142owego procentowego udzia\u0142u pasa\u017cer\u00f3w w poszczeg\u00f3lnych klasach z uwzgl\u0119dnieniem p\u0142ci.\u00b6","text":""},{"location":"Titanic/#Nale%C5%BCy-zaznaczy%C4%87,-%C5%BCe-liczby-zawarte-w-nawiasach-oznaczaj%C4%85-liczb%C4%99-wszystkich-bilet%C3%B3w-w-danej-klasie.","title":"Nale\u017cy zaznaczy\u0107, \u017ce liczby zawarte w nawiasach oznaczaj\u0105 liczb\u0119 wszystkich bilet\u00f3w w danej klasie.\u00b6","text":""},{"location":"Titanic/#Poka%C5%BC-wykres-ko%C5%82owy-%C5%9Bmiertelno%C5%9Bci-do-prze%C5%BCycia-dla-klasy-1-wed%C5%82ug-podzia%C5%82u-na-wiek.","title":"Poka\u017c wykres ko\u0142owy \u015bmiertelno\u015bci do prze\u017cycia dla klasy 1 wed\u0142ug podzia\u0142u na wiek.\u00b6","text":""},{"location":"Titanic/#Poka%C5%BC-wykres-ko%C5%82owy-%C5%9Bmiertelno%C5%9Bci-do-prze%C5%BCycia-dla-klasy-2-wed%C5%82ug-podzia%C5%82u-na-wiek.","title":"Poka\u017c wykres ko\u0142owy \u015bmiertelno\u015bci do prze\u017cycia dla klasy 2 wed\u0142ug podzia\u0142u na wiek.\u00b6","text":""},{"location":"Titanic/#Poka%C5%BC-wykres-ko%C5%82owy-%C5%9Bmiertelno%C5%9Bci-do-prze%C5%BCycia-dla-klasy-3-wed%C5%82ug-podzia%C5%82u-na-wiek.","title":"Poka\u017c wykres ko\u0142owy \u015bmiertelno\u015bci do prze\u017cycia dla klasy 3 wed\u0142ug podzia\u0142u na wiek.\u00b6","text":""},{"location":"Titanic/#WNIOSKI:","title":"WNIOSKI:\u00b6","text":""},{"location":"Titanic/#WNIOSKI:","title":"WNIOSKI:\u00b6","text":""},{"location":"Titanic/#Wniosek-jaki-si%C4%99-sam-nasuwa-to-taki,-%C5%BCe-wykres-zale%C5%BCno%C5%9Bci-ceny-od-prze%C5%BCywalno%C5%9Bci-jest-nieadekwatny-i-%C5%BCeby-uzyska%C4%87-bardziej-wiarygodne-dane-nale%C5%BCy-pos%C5%82u%C5%BCy%C4%87-sie-wykresem-ko%C5%82owym-osobnym-dla-ka%C5%BCdej-z-klas.-Wtedy-na-w%C5%82asne-oczy-mo%C5%BCemy-ujrze%C4%87-jak-w-rzeczywisto%C5%9Bci-wygl%C4%85da%C5%82a-sytuacja-i-gdzie-by%C5%82a-najwi%C4%99ksza-%C5%9Bmiertelno%C5%9B%C4%87.","title":"Wniosek jaki si\u0119 sam nasuwa to taki, \u017ce wykres zale\u017cno\u015bci ceny od prze\u017cywalno\u015bci jest nieadekwatny i \u017ceby uzyska\u0107 bardziej wiarygodne dane nale\u017cy pos\u0142u\u017cy\u0107 sie wykresem ko\u0142owym osobnym dla ka\u017cdej z klas. Wtedy na w\u0142asne oczy mo\u017cemy ujrze\u0107 jak w rzeczywisto\u015bci wygl\u0105da\u0142a sytuacja i gdzie by\u0142a najwi\u0119ksza \u015bmiertelno\u015b\u0107.\u00b6","text":""}]}